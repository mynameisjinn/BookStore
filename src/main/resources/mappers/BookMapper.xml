<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.example.bookstore.repository.BookRepository">

    <select id="selectCategory" resultType="org.example.bookstore.vo.CategoryVO">
        SELECT  ID,
                NAME,
                PARENT_ID AS parentId,
                DEPTH
        FROM CATEGORY
    </select>

    <select id="selectAuthor" resultType="org.example.bookstore.vo.AuthorVO" parameterType="String">
        SELECT ID,
        NAME
        FROM AUTHOR
        <if test='searchVal != null and searchVal != ""'>
            WHERE NAME LIKE CONCAT('%', #{searchVal}, '%')
        </if>
    </select>

    <select id="selectAuthorAll" resultType="org.example.bookstore.vo.AuthorVO">
        SELECT ID,
        NAME
        FROM AUTHOR
    </select>

    <select id="selectPublisher" resultType="org.example.bookstore.vo.PublisherVO" parameterType="String">
        SELECT  ID,
                NAME
        FROM PUBLISHER
        <if test='searchVal != null and searchVal !=""'>
            WHERE NAME LIKE CONCAT('%', #{searchVal}, '%')
        </if>
    </select>

    <select id="selectPublisherAll" resultType="org.example.bookstore.vo.PublisherVO">
        SELECT  ID,
        NAME
        FROM PUBLISHER
    </select>

    <select id="selectBookList" resultType="org.example.bookstore.vo.BookVO">
        SELECT  B.ID,
                TITLE,
                A.NAME AS authorName,
                P.NAME AS publisherName,
                PUBLISHED_DATE AS publishedDate,
                B.IMG_PATH AS imgPath
        FROM BOOK B
        JOIN AUTHOR A
            ON B.AUTHOR_ID = A.ID
        JOIN PUBLISHER P
            ON B.PUBLISHER_ID = P.ID
    </select>

    <select id="selectBookByBookId" resultType="org.example.bookstore.vo.BookVO">
        SELECT  B.ID,
            TITLE,
            A.NAME AS authorName,
            P.NAME AS publisherName,
            PUBLISHED_DATE AS publishedDate,
            B.AUTHOR_ID AS authorId,
            B.PUBLISHER_ID AS publisherId,
            B.PRICE,
            B.CATEGORY_ID AS categoryId,
            B.IMG_PATH AS imgPath
        FROM BOOK B
            JOIN AUTHOR A
            ON B.AUTHOR_ID = A.ID
            JOIN PUBLISHER P
            ON B.PUBLISHER_ID = P.ID
        WHERE B.ID = #{id}
    </select>

    <insert id="saveBook" parameterType="org.example.bookstore.vo.BookVO">
        INSERT INTO BOOK (TITLE,
                        AUTHOR_ID,
                        PRICE,
                        PUBLISHED_DATE,
                        PUBLISHER_ID,
                        CATEGORY_ID,
                        IMG_PATH)
        VALUES  (#{title}, #{authorId}, #{price}, #{publishedDate},
                #{publisherId}, #{categoryId}, #{imgPath} )
    </insert>

    <update id="updateBook">
        UPDATE BOOK
        SET TITLE = #{title},
            AUTHOR_ID = #{authorId},
            PRICE = #{price},
            PUBLISHED_DATE = #{publishedDate},
            PUBLISHER_ID = #{publisherId},
            CATEGORY_ID = #{categoryId},
            IMG_PATH = #{imgPath}
        WHERE ID = #{id}
    </update>

    <select id="selectBookListBySearchVar" resultType="org.example.bookstore.vo.BookVO">
        SELECT  B.ID,
                TITLE,
                A.NAME AS authorName,
                P.NAME AS publisherName,
                PUBLISHED_DATE AS publishedDate,
                B.AUTHOR_ID AS authorId,
                B.PUBLISHER_ID AS publisherId,
                B.PRICE,
                B.CATEGORY_ID AS categoryId,
                B.IMG_PATH AS imgPath
        FROM    BOOK B
        JOIN AUTHOR A
            ON B.AUTHOR_ID = A.ID
        JOIN PUBLISHER P
            ON B.PUBLISHER_ID = P.ID
        <if test='searchVal != null and searchVal !=""'>
            WHERE B.TITLE LIKE CONCAT('%', #{searchVal}, '%')
            OR A.NAME LIKE CONCAT('%', #{searchVal}, '%')
            OR P.NAME LIKE CONCAT('%', #{searchVal}, '%')
        </if>
    </select>


    <delete id="deleteBookOne">
        DELETE FROM BOOK
        WHERE ID = #{bookId}
    </delete>

    <delete id="deleteBookList">
        DELETE FROM BOOK
        WHERE ID IN
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>